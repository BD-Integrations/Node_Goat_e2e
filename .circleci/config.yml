version: 2.1

# Define reusable orbs
orbs:
  snyk: snyk/snyk@1.1.2

# Define jobs for each scan type
jobs:
  code_scan:
    docker:
      - image: cimg/node:12.22
    steps:
      - checkout
      - install_snyk_html
      - snyk/code_scan
      - generate_snyk_report
      - store_artifacts:
          path: code-report.html

  sca_scan:
    docker:
      - image: cimg/node:12.22
    steps:
      - checkout
      - install_snyk_html
      - snyk/sca_scan
      - generate_snyk_report
      - store_artifacts:
          path: dependency-report.html

  secret_scan:
    machine:
      image: ubuntu-2204:2024.04.4
    steps:
      - checkout
      - install_git_make
      - clone_build_gitleaks
      - run_gitleaks_scan
      - store_artifacts:
          path: git.csv
          destination: git-leaks-reports

  container_scan:
    docker:
      - image: cimg/node:12.22
    steps:
      - checkout
      - install_snyk_cli
      - install_snyk_html
      - build_docker_image
      - snyk/container_scan
      - generate_snyk_report
      - store_artifacts:
          path: results-container.html

# Define reusable steps
steps:
  install_snyk_cli:
    run:
      name: Install Snyk CLI
      command: npm install -g snyk

  install_snyk_html:
    run:
      name: Install Snyk to HTML
      command: npm install --prefix=$HOME/.local -g snyk-to-html

  install_git_make:
    run:
      name: Install Git and make
      command: |
        sudo apt-get update
        sudo apt-get install -y git make

  clone_build_gitleaks:
    run:
      name: Clone GitLeaks and build
      command: |
        git clone https://github.com/gitleaks/gitleaks.git
        cd gitleaks
        make build

  run_gitleaks_scan:
    run:
      name: Run GitLeaks scan
      command: |
        cd gitleaks
        ./gitleaks detect -v -f csv --report-path ../git.csv

  build_docker_image:
    run:
      name: Build Docker Image
      command: |
        docker build -t $DOCKER_IMAGE:latest .

  snyk/code_scan:
    run:
      name: Run Code Scan
      command: |
        snyk test --all-projects --json-file-output=code-results.json

  snyk/sca_scan:
    run:
      name: Run SCA Scan
      command: |
        snyk test --all-projects --json-file-output=dependency-results.json

  snyk/container_scan:
    run:
      name: Run Container Scan
      command: |
        snyk container test $DOCKER_IMAGE:latest --json > container-results.json

  generate_snyk_report:
    run:
      name: Generate Snyk HTML report
      command: |
        cat code-results.json | snyk-to-html -o code-report.html
        cat dependency-results.json | snyk-to-html -o dependency-report.html
        cat container-results.json | snyk-to-html -o results-container.html

# Define workflows to execute different scans
workflows:
  version: 2
  main_workflow:
    jobs:
      - code_scan
      - sca_scan
      - secret_scan
      - container_scan
