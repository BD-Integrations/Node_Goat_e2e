version: 2.1

# Define reusable orbs
orbs:
  snyk: snyk/snyk@1.1.2

# Define jobs for each scan type
jobs:
  code_scan:
    docker:
      - image: cimg/node:12.22
    steps:
      - checkout
      - run:
          name: Install Snyk CLI
          command: npm install -g snyk
      - run:
          name: Install Snyk to HTML
          command: npm install --prefix=$HOME/.local -g snyk-to-html
      - run:
          name: Run Code Scan
          command: snyk code test --json | snyk-to-html -o code-report.html || true
      - persist_to_workspace:
          root: .
          paths:
            - code-report.html
      - store_artifacts:
          path: code-report.html

  sca_scan:
    docker:
      - image: cimg/node:12.22
    steps:
      - checkout
      - run:
          name: Install Snyk CLI
          command: npm install -g snyk
      - run:
          name: Install Snyk to HTML
          command: npm install --prefix=$HOME/.local -g snyk-to-html
      - run:
          name: Run SCA Scan
          command: snyk test --json | snyk-to-html -o dependency-report.html || true
      - persist_to_workspace:
          root: .
          paths:
            - dependency-report.html
      - store_artifacts:
          path: dependency-report.html

  secret_scan:
    machine:
      image: ubuntu-2204:2024.04.4
    steps:
      - checkout
      - run:
          name: Install Git and make
          command: |
            sudo apt-get update
            sudo apt-get install -y git make
      - run:
          name: Clone GitLeaks and build
          command: |
            git clone https://github.com/gitleaks/gitleaks.git
            cd gitleaks
            make build
      - run:
          name: Run GitLeaks scan
          command: |
            cd gitleaks
            ./gitleaks detect -v -f csv --report-path ../git.csv || true
      - persist_to_workspace:
          root: .
          paths:
            - git.csv
      - store_artifacts:
          path: git.csv

  container_scan:
    docker:
      - image: cimg/node:12.22
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Install Snyk CLI
          command: npm install -g snyk
      - run:
          name: Install Snyk to HTML
          command: npm install --prefix=$HOME/.local -g snyk-to-html
      - run:
          name: Build Docker Image
          command: docker build -t nodegoat:latest .
      - run:
          name: Run Container Scan
          command: snyk container test nodegoat:latest --json | snyk-to-html -o results-container.html || true
      - persist_to_workspace:
          root: .
          paths:
            - results-container.html
      - store_artifacts:
          path: results-container.html

  generate_xlsx_files:
    docker:
      - image: cimg/python:3.8
    steps:
      - attach_workspace:
          at: /workspace
      - checkout
      - run:
          name: Install Python dependencies
          command: pip install pandas openpyxl beautifulsoup4
      - run:
          name: Generate XLSX from Code Scan
          command: python reSAST.py /workspace/code-report.html code-results.xlsx || true
      - run:
          name: Generate XLSX from SCA Scan
          command: python reSCA.py /workspace/dependency-report.html dependency-results.xlsx || true
      - run:
          name: Generate XLSX from Container Scan
          command: python reContainer.py /workspace/results-container.html container-results.xlsx || true
      - persist_to_workspace:
          root: .
          paths:
            - code-results.xlsx
            - dependency-results.xlsx
            - container-results.xlsx
      - store_artifacts:
          path: code-results.xlsx
      - store_artifacts:
          path: dependency-results.xlsx
      - store_artifacts:
          path: container-results.xlsx

  run_jira_updates:
    docker:
      - image: cimg/python:3.8
    environment:
      JIRA_USERNAME: $JIRA_USERNAME
      JIRA_API_TOKEN: $JIRA_API_TOKEN
      JIRA_URL: $JIRA_URL
      JIRA_ASSIGNEE: $JIRA_ASSIGNEE
      JIRA_SEVERITY: $JIRA_SEVERITY
    steps:
      - attach_workspace:
          at: /workspace
      - checkout
      - run:
          name: Install Python dependencies
          command: pip install requests pandas openpyxl
      - run:
          name: Run JIRA SAST Update
          command: python JIRA_SAST.py /workspace/code-results.xlsx || true
      - run:
          name: Run JIRA SCA Update
          command: python JIRA_SCA.py /workspace/dependency-results.xlsx || true
      - run:
          name: Run JIRA Container Update
          command: python JIRA_Container.py /workspace/container-results.xlsx || true

# Define workflows to execute different scans
workflows:
  version: 2
  main_workflow:
    jobs:
      - code_scan
      - sca_scan
      - secret_scan
      - container_scan
      - generate_xlsx_files:
          requires:
            - code_scan
            - sca_scan
            - container_scan
            - secret_scan
      - run_jira_updates:
          requires:
            - generate_xlsx_files
